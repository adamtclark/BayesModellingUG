op = par(mfrow=c(2,1))
hist(exp(smp_detfun0[,1]), xlim=c(exp(minvUSE[1]), exp(maxvUSE[1])),
main="det. function", xlab="obs", breaks = 20)
abline(v=exp(pars_true$obs), col=2) # true value
abline(v=c(exp(minvUSE[1]), exp(maxvUSE[1])), col=1, lty=2)# Priors
hist(exp(smp_detfun0[,2]), xlim=c(exp(minvUSE[2]), exp(maxvUSE[2])),
main="det. function", xlab="proc", breaks = 20)
abline(v=exp(pars_true$proc), col=2) # true value
abline(v=c(exp(minvUSE[2]), exp(maxvUSE[2])), col=1, lty=2)# Priors
# OLS example
set.seed(231011) # seed for analyses
intercepts = 5 # y-intercept
slopes = 8 # slope
error = 10 # residual error
# make fake data for 50 plots
N = 100000
bdat = data.frame(plot = 1:N,
diversity = sample(1:32, N, rep = TRUE), # randomly select richness between 1 and 32
biomass = NA)
# generate random biomass data
bdat$biomass=intercepts + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
# plot
par(mar=c(4,4,2,2))
#plot(biomass~diversity, data = bdat)
# fit a regression
mod_ols = lm(biomass~diversity, data = bdat)
# add regression line to plot
curve(coef(mod_ols)[1]+coef(mod_ols)[2]*x, from = 1, to = 32, add = TRUE, lty = 2)
# OLS example
set.seed(231011) # seed for analyses
intercepts = 5 # y-intercept
slopes = 0.001 # slope
error = 10 # residual error
# make fake data for 50 plots
N = 100000
bdat = data.frame(plot = 1:N,
diversity = sample(1:32, N, rep = TRUE), # randomly select richness between 1 and 32
biomass = NA)
# generate random biomass data
bdat$biomass=intercepts + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
# plot
par(mar=c(4,4,2,2))
#plot(biomass~diversity, data = bdat)
# fit a regression
mod_ols = lm(biomass~diversity, data = bdat)
# add regression line to plot
curve(coef(mod_ols)[1]+coef(mod_ols)[2]*x, from = 1, to = 32, add = TRUE, lty = 2)
summary(mod_ols)
# OLS example
set.seed(231011) # seed for analyses
intercepts = 5 # y-intercept
slopes = 0.001 # slope
error = 10 # residual error
# make fake data for 50 plots
N = 50
bdat = data.frame(plot = 1:N,
diversity = sample(1:32, N, rep = TRUE), # randomly select richness between 1 and 32
biomass = NA)
# generate random biomass data
bdat$biomass=intercepts + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
# plot
par(mar=c(4,4,2,2))
#plot(biomass~diversity, data = bdat)
# fit a regression
mod_ols = lm(biomass~diversity, data = bdat)
summary(mod_ols)
# add regression line to plot
curve(coef(mod_ols)[1]+coef(mod_ols)[2]*x, from = 1, to = 32, add = TRUE, lty = 2)
# Multipleregression example
set.seed(231011) # seed for analyses
slopes = 8 # slope
error = 10 # residual error
n_blocks = 10 # number of blocks
intercepts = sort(rnorm(n_blocks, mean = 100, sd = 80)) # y-intercepts for each block
intercepts
# make fake data for 50 plots
bdat = data.frame(plot = 1:50,
block = rep(1:n_blocks, each = 50),
diversity = sample(1:32, 50*n_blocks, rep = TRUE), # randomly select richness between 1 and 32
biomass = NA)
# make fake data for 50 plots
bdat = data.frame(plot = 1:50,
block = rep(1:n_blocks, each = 50),
diversity = sample(1:32, 50*n_blocks, rep = TRUE), # randomly select richness between 1 and 32
biomass = NA)
intercepts
bdat$block
# generate random biomass data
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, data = bdat, col = rainbow(n_blocks)[bdat$block])
rainbow(19)
rainbow(n_blocks)
as.factor(block)
as.factor(bdat$block)
# fit a regression
mod_mreg = lm(biomass~-1+as.factor(block) + diversity, data = bdat)
# NOTE: think about what this "-1" is doing. Try fitting the model with and without it, and looking at the "summary".
summary(mod_mreg)
# fit a regression
mod_mreg = lm(biomass~-1+as.factor(block) + diversity, data = bdat)
# NOTE: think about what this "-1" is doing. Try fitting the model with and without it, and looking at the "summary".
summary(mod_mreg)
# fit a regression
mod_mreg = lm(biomass~-1+as.factor(block) + diversity, data = bdat)
# NOTE: think about what this "-1" is doing. Try fitting the model with and without it, and looking at the "summary".
summary(mod_mreg)
intercepts
# fit a regression
mod_mreg = lm(biomass~as.factor(block) + diversity, data = bdat)
summary(mod_mreg)
# fit a regression
mod_mreg = lm(biomass~-1, data = bdat)
summary(mod_mreg)
# fit a regression
mod_mreg = lm(biomass~-1+diversity, data = bdat)
summary(mod_mreg)
1:n_blocks
# add regression line to plot
for(i in 1:n_blocks) {
curve(coef(mod_mreg)[i]+coef(mod_mreg)[n_blocks+1]*x, from = 1, to = 32, add = TRUE, lty = 2, col = rainbow(n_blocks)[i])
}
# Multipleregression example
set.seed(231011) # seed for analyses
slopes = 8 # slope
error = 10 # residual error
n_blocks = 10 # number of blocks
intercepts = sort(rnorm(n_blocks, mean = 100, sd = 80)) # y-intercepts for each block
# make fake data for 50 plots
bdat = data.frame(plot = 1:50,
block = rep(1:n_blocks, each = 50),
diversity = sample(1:32, 50*n_blocks, rep = TRUE), # randomly select richness between 1 and 32
biomass = NA)
# generate random biomass data
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, data = bdat, col = rainbow(n_blocks)[bdat$block])
# fit a regression
mod_mreg = lm(biomass~-1+as.factor(block) + diversity, data = bdat)
# NOTE: think about what this "-1" is doing. Try fitting the model with and without it, and looking at the "summary".
# add regression line to plot
for(i in 1:n_blocks) {
curve(coef(mod_mreg)[i]+coef(mod_mreg)[n_blocks+1]*x, from = 1, to = 32, add = TRUE, lty = 2, col = rainbow(n_blocks)[i])
}
# fit a regression
mod_mreg = lm(biomass~-1+as.factor(block)*diversity, data = bdat)
# get summary of regression
summary(mod_mreg)
# fit a regression
mod_mreg = lm(biomass~-1+as.factor(block)+as.factor(block):diversity, data = bdat)
# get summary of regression
summary(mod_mreg)
# remove data from block 6
bdat_small = bdat[bdat$plot == 1,]
bdat_small
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, data = bdat_small, col = rainbow(n_blocks)[bdat$block])
plot(biomass~diversity, data = bdat_small, col = rainbow(n_blocks)[bdat_small$block])
# try to fit a model...
mod_mreg2 = lm(biomass~-1+as.factor(block) + diversity, data = bdat_small)
# get summary of regression
summary(mod_mreg2)
require(nlme) # load nlme package
?nlme
require(nlme) # load nlme package
mod_mixef1 = lme(biomass~diversity, random = ~1|block, data = bdat_small)
summary(mod_mixef1)
ranef(mod_mixef1)
intercepts
# add regression line to plot
for(i in 1:n_blocks) {
curve(fixef(mod_mixef1)[1]+ranef(mod_mixef1)[i,1] + fixef(mod_mixef1)[2]*x, from = 1, to = 32, add = TRUE, lty = 2, col = rainbow(n_blocks)[i])
}
hist(ranef(mod_mixef1))
hist(ranef(mod_mixef1)[,1])
summary(mod_mixef1)
x <- c(1,2,3)
y <- c(4,5)
plot(x,y)
regdat = data.frame(x = rnorm(n), a = rnorm(n), b = rnorm(n))
# make fake data for regression
n = 100 # number of observations
regdat = data.frame(x = rnorm(n), a = rnorm(n), b = rnorm(n))
regdat$y = with(regdat, 2 + 1.5*x - 0.6*b) + rnorm(n, 0, 0.5) # make y variable
# fit OLS of x vs. y
mod1 = lm(y ~ x, data = regdat)
summary(mod1) # look at regression output
full_model <- lm(y ~ x + a + b, data = regdat)
stepwise_model <- step(full_model, direction = "both")
summary(stepwise_model)
plot(stepwise_model, which = 1)  # Residuals vs. Fitted
plot(stepwise_model, which = 1)  # Residuals vs. Fitted
plot(stepwise_model, which = 2)  # Normal Q-Q plot
# Detect and label potential outliers
outliers <- which(abs(stepwise_model$residuals) > 2 * sd(stepwise_model$residuals))
outliers
influence_plot(stepwise_model)
cooksd <- cooks.distance(stepwise_model)
cooksd
influence.measures
library(car)
require(nlme) # load package
# make data for example analysis 1
set.seed(231011)
n_blocks = 10
intercepts = rnorm(n_blocks, 20, 8)
slopes = 2
error = 2
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
bdat
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes, col = i, lty=2)
} else {
abline(intercepts[i], slopes, col = i)
}
}
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1|block, data = bdat)
summary(mod)
random.effects(mod)
hist(random.effects(mod))
hist(random.effects(mod[,1]))
hist(random.effects(mod)[,1])
# make data for example analysis 1
set.seed(231011)
n_blocks = 100
intercepts = rnorm(n_blocks, 20, 8)
slopes = 2
error = 2
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_1.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
require(nlme) # load package
# make data for example analysis 1
set.seed(231011)
n_blocks = 10
intercepts = rnorm(n_blocks, 20, 8)
slopes = 2
error = 2
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_1.csv", row.names = FALSE)
n_blocks = 100
intercepts = rnorm(n_blocks, 20, 8)
slopes = 2
error = 2
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes, col = i, lty=2)
} else {
abline(intercepts[i], slopes, col = i)
}
}
for(i in 1:n_blocks) {
if(i==3) {
abline(intercepts[i], slopes, col = i, lty=2)
} else {
abline(intercepts[i], slopes, col = i)
}
}
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1|block, data = bdat)
summary(mod)
hist(random.effects(mod)[,1])
sd(random.effects(mod))
random.effects(mod)
sd(random.effects(mod)[,1])
summary(mod)
sd(random.effects(mod)[,1])
mean(random.effects(mod)[,1])
fixed.effects(mod)[1]
random.effects(mod)[,1]+fixed.effects(mod)[1]
hist(random.effects(mod)[,1]+fixed.effects(mod)[1])
plot(mod)
setwd("~/Dropbox/Teaching/Graz/BayesStats/BayesModellingUG/meetings/K2/")
bdat = read.csv("dataset_2.csv") # load data
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
mod = nlme(biomass~diversity, data = bdat)
mod = gls(biomass~diversity, data = bdat)
mod = nlme(biomass~diversity, random = ~1|Block, data = bdat)
mod = lme(biomass~diversity, random = ~1|Block, data = bdat)
mod = lme(biomass~diversity, random = ~1|block, data = bdat)
mod1 = gls(biomass~diversity, data = bdat)
mod2 = lme(biomass~diversity, random = ~1|block, data = bdat)
anova(mod1, mod2)
anova(mod1, mod2)
mod3 = lme(biomass~diversity, random = ~1+diversity|block, data = bdat)
anova(mod2, mod3)
summary(mod2)
# make data for example analysis 1
set.seed(231011)
n_blocks = 10
intercepts = rnorm(n_blocks, 14, 7)
slopes = 5
error = 5
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
bdat = read.csv("dataset_2.csv") # load data
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
mod1 = gls(biomass~diversity, data = bdat)
mod2 = lme(biomass~diversity, random = ~1|block, data = bdat)
anova(mod1, mod2)
mod3 = lme(biomass~diversity, random = ~1+diversity|block, data = bdat)
anova(mod2, mod3)
summary(mod2)
set.seed(231107)
n_blocks = 10
intercepts = rnorm(n_blocks, 14, 7)
slopes = 5
error = 5
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
setwd("~/Dropbox/Teaching/Graz/BayesStats/BayesModellingUG/meetings/K2/")
bdat = read.csv("dataset_2.csv") # load data
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
mod1 = gls(biomass~diversity, data = bdat)
mod2 = lme(biomass~diversity, random = ~1|block, data = bdat)
anova(mod1, mod2)
mod3 = lme(biomass~diversity, random = ~1+diversity|block, data = bdat)
anova(mod2, mod3)
summary(mod2)
# make data for example analysis 1
set.seed(231011)
n_blocks = 10
intercepts = rnorm(n_blocks, 14, 7)
slopes = 5
error = 5
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes, col = i, lty=2)
} else {
abline(intercepts[i], slopes, col = i)
}
}
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1|block, data = bdat)
summary(mod)
fixef(mod)
ranef(mod)
VarCorr(mod)
# make data for example analysis 1
set.seed(231107)
n_blocks = 10
intercepts = rnorm(n_blocks, 14, 7)
slopes = 5
error = 5
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes, col = i, lty=2)
} else {
abline(intercepts[i], slopes, col = i)
}
}
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1|block, data = bdat)
summary(mod)
fixef(mod)
ranef(mod)
VarCorr(mod)
## Psudo-R-squared
Y = bdat$biomass
Y_hat = predict(mod2)
plot(Y, Y_hat)
abline(a=0, b=1, lty = 2)
plot(Y_hat, Y)
abline(a=0, b=1, lty = 2)
TSS =
RSS = sum((Y-Y_hat)^2)
TSS = sum((Y-mean(Y))^2)
RSS = sum((Y-Y_hat)^2)
RSS/TSS
RSS/TSS
1-RSS/TSS
RSS2 = sum((Y-0)^2)
1-RSS2/TSS
## Psudo-R-squared
Y = bdat$biomass
Y_hat = predict(mod2)
TSS = sum((Y-mean(Y))^2)
RSS = sum((Y-Y_hat)^2)
RSS2 = sum((Y-0)^2)
1-RSS/TSS
predict(mod2)
## Psudo-R-squared
Y = bdat$biomass
Y_hat = predict(mod2, level = 0)
TSS = sum((Y-mean(Y))^2)
RSS = sum((Y-Y_hat)^2)
RSS2 = sum((Y-0)^2)
1-RSS/TSS
plot(Y_hat, Y); abline(a=0, b=1, lty=2)
Y_hat = predict(mod2, level = 1)
plot(Y_hat, Y); abline(a=0, b=1, lty=2)
Y_hat = predict(mod2, level = 0)
plot(Y_hat, Y); abline(a=0, b=1, lty=2)
VarCorr(mod2)
118.83482+27.60954
var(bdat$biomass)
plot(biomass~1, col = block, data = bdat)
mod1 = gls(biomass~diversity, data = bdat)
mod2 = lme(biomass~diversity, random = ~1|block, data = bdat)
anova(mod1, mod2)
mod3 = lme(biomass~diversity, random = ~1+diversity|block, data = bdat)
anova(mod2, mod3)
summary(mod2)
VarCorr(mod2)
118.83482+27.60954
mod2 = lme(biomass~1, random = ~1|block, data = bdat)
summary(mod2)
VarCorr(mod2)
138.6763+159.9295
var(bdat$biomass)
# Multiple regression example
set.seed(231011) # seed for analyses
error = 10 # residual error
n_blocks = 10 # number of blocks
intercepts = sort(rnorm(n_blocks, mean = 200, sd = 80)) # y-intercepts for each block
slopes = rnorm(n_blocks, mean = 5, sd = 4) # slope
intercepts
slopes
# make fake data for 50 plots
bdat = data.frame(plot = 1:50,
block = rep(1:n_blocks, each = 50),
diversity = sample(1:32, 50*n_blocks, rep = TRUE), # randomly select richness between 1 and 32
biomass = NA)
# generate random biomass data
bdat$biomass=intercepts[bdat$block] + slopes[bdat$block]*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat
# keep just 2 plots for the analysis
bdat_slopes = bdat[bdat$plot %in% c(1,2),]
bdat_slopes
# fit a mixed-effects regression
tmp = lm(biomass~diversity*block, data = bdat_slopes, random = ~1+diversity|block)
# fit a mixed-effects regression
tmp = lm(biomass~diversity*block, data = bdat_slopes)
summary(tmp)
mod_mixef2 = lme(biomass~diversity, data = bdat_slopes,
random = ~1+diversity|block)
# look at summary output - what do these terms tell us?
summary(mod_mixef2)
plot(bdat$biomass, predict(tmp, newdata=data.frame(bdat)))
