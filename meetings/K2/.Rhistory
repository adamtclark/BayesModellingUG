bdat = data.frame(plot = rep(1:n_plots, each = n_subplots),
subplot = 1:n_subplots,
biomass = NA)
intercepts_subplots[cbind(bdat$plot, bdat$subplot)]
bdat$biomass = intercepts_subplots[cbind(bdat$plot, bdat$subplot)] + rnorm(n_plots*n_subplots, 0, error)
bdat$biomass
head(bdat)
head(intercepts_subplots)
bdat$biomass = intercepts_subplots[cbind(bdat$plot, bdat$subplot)]
head(intercepts_subplots)
head(bdat)
head(bdat, 20)
# Nested data example
set.seed(231011) # seed for analyses
error = 10 # residual error
n_plots = 100 # number of plots
n_subplots = 10 # subplots per block
intercepts_plots = sort(rnorm(n_plots, mean = 200, sd = 40)) # y-intercepts for each plot
intercepts_subplots = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts_subplots[i,] = rnorm(n_subplots, mean = intercepts_plots[i], sd = 20) # intercept for each subplot
}
head(intercepts_subplots) # look at coefficient matrix
# make fake data
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots),
subplot = 1:n_subplots,
biomass = NA)
bdat$biomass = intercepts_subplots[cbind(bdat$plot, bdat$subplot)] + rnorm(n_plots*n_subplots, 0, error)
mmod = lme(biomass ~ 1, data = bdat, random = ~1|plot)
require(nlme)
mmod = lme(biomass ~ 1, data = bdat, random = ~1|plot)
summary(mmod)
mmod2 = lme(biomass ~ 1, data = bdat, random = ~1|plot/subplot)
summary(mmod2)
vcov(mmod2)
VarCorr(mmod2)
names(VarCorr(mmod2))
data.frame(VarCorr(mmod2))
VarCorr(mmod2)
VarCorr(mmod2)[1]
VarCorr(mmod2)[,1]
VarCorr(mmod2)[,2]
VarCorr(mmod2)[,2]
ML_mmod = update(mmod, method = "ML")
ML_mmod2 = update(mmod2, method = "ML")
anova(ML_mmod, ML_mmod2)
bdat$fake_subplot = sample(1:10, n_plots*n_subplots, replace = TRUE)
mmod3 = lme(biomass ~ 1, data = bdat, random = ~1|plot/subplot/fake_subplot, method = "ML")
rm(mmod3)
# run ANOVA
anova(ML_mmod, ML_mmod2, ML_mmod3)
bdat$fake_subplot = sample(1:10, n_plots*n_subplots, replace = TRUE)
ML_mmod3 = lme(biomass ~ 1, data = bdat, random = ~1|plot/subplot/fake_subplot, method = "ML")
# run ANOVA
anova(ML_mmod, ML_mmod2, ML_mmod3)
anova(ML_mmod, ML_mmod2, ML_mmod3)
anova(ML_mmod2, ML_mmod3)
bdat$fake_subplot = sample(1:10, n_plots*n_subplots, replace = TRUE)
ML_mmod3 = lme(biomass ~ 1, data = bdat, random = ~1|plot/subplot/fake_subplot, method = "ML")
# run ANOVA
anova(ML_mmod2, ML_mmod3)
bdat$fake_subplot = sample(1:10, n_plots*n_subplots, replace = TRUE)
ML_mmod3 = lme(biomass ~ 1, data = bdat, random = ~1|plot/subplot/fake_subplot, method = "ML")
# run ANOVA
anova(ML_mmod2, ML_mmod3)
bdat$fake_subplot = sample(1:50, n_plots*n_subplots, replace = TRUE)
ML_mmod3 = lme(biomass ~ 1, data = bdat, random = ~1|plot/subplot/fake_subplot, method = "ML")
# run ANOVA
anova(ML_mmod2, ML_mmod3)
bdat$fake_subplot = sample(1:50, n_plots*n_subplots, replace = TRUE)
ML_mmod3 = lme(biomass ~ 1, data = bdat, random = ~1|plot/fake_subplot, method = "ML")
# run ANOVA
anova(ML_mmod, ML_mmod3)
# make data for example analysis 1
set.seed(231011)
# make data for example analysis 1
set.seed(231011)
n_plots = 50
n_subplots = 10
intercepts_plots = rnorm(n_plots, 20, 8)
intercepts_plots = rnorm(n_plots, 20, 8)
slopes = rnorm(n_plots, 2, 2)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
# make data for example analysis 1
set.seed(231011)
n_plots = 50
n_subplots = 10
intercepts_plots = rnorm(n_plots, 20, 8)
slopes = rnorm(n_plots, 2, 2)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(intercepts_plots[i], 0, 5)
}
# make data for example analysis 1
set.seed(231011)
n_plots = 50
n_subplots = 10
intercepts_plots = rnorm(n_plots, 20, 8)
slopes = rnorm(n_plots, 2, 2)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
error = 2
# make data for example analysis 1
set.seed(231011)
n_plots = 50
n_subplots = 10
intercepts_plots = rnorm(n_plots, 20, 8)
slopes = rnorm(n_plots, 2, 2)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
error = 2
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots),
subplot = 1:n_subplots,
diversity = round(runif(n_plots*n_subplots, 1, 10)),
biomass = NA)
bdat$biomass=intercepts[cbind(bdat$plot, bdat$subplot)] + slopes[bdat$plot]*bdat$diversity + rnorm(nrow(bdat), 0, error)
# make data for example analysis 1
set.seed(231011)
n_plots = 50
n_subplots = 10
intercepts_plots = rnorm(n_plots, 20, 8)
slopes = rnorm(n_plots, 2, 2)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
error = 2
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots),
subplot = 1:n_subplots,
diversity = round(runif(n_plots*n_subplots, 1, 10)),
biomass = NA)
bdat$biomass=intercepts[cbind(bdat$plot, bdat$subplot)] + slopes[bdat$plot]*bdat$diversity + rnorm(nrow(bdat), 0, error)
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
plot(biomass~diversity, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
# make data for example analysis 1
set.seed(231011)
n_plots = 50
n_subplots = 10
intercepts_plots = rnorm(n_plots, 20, 8)
slopes = rnorm(n_plots, 2, 2)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
error = 2
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots),
subplot = 1:n_subplots,
diversity = runif(n_plots*n_subplots, 1, 10),
biomass = NA)
bdat$biomass=intercepts[cbind(bdat$plot, bdat$subplot)] + slopes[bdat$plot]*bdat$diversity + rnorm(nrow(bdat), 0, error)
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes[i], col = i, lty=2)
} else {
abline(intercepts[i], slopes[i], col = i)
}
}
# make data for example analysis 1
set.seed(231011)
n_plots = 30
n_subplots = 6
intercepts_plots = rnorm(n_plots, 20, 8)
slopes = rnorm(n_plots, 2, 2)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
error = 2
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots),
subplot = 1:n_subplots,
diversity = runif(n_plots*n_subplots, 1, 10),
biomass = NA)
bdat$biomass=intercepts[cbind(bdat$plot, bdat$subplot)] + slopes[bdat$plot]*bdat$diversity + rnorm(nrow(bdat), 0, error)
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes[i], col = i, lty=2)
} else {
abline(intercepts[i], slopes[i], col = i)
}
}
# analyse
require(nlme)
# analyse
require(nlme)
mod1 = lme(biomass~diversity, random = ~1|plot, data = bdat, method = "ML")
mod1 = lme(biomass~1, random = ~1|plot, data = bdat, method = "ML")
mod2 = lme(biomass~diversity, random = ~1|plot, data = bdat, method = "ML")
ANOVA(mod1, mod2)
anova(mod1, mod2)
mod3 = lme(biomass~diversity, random = ~1+diversity|plot, data = bdat, method = "ML")
mod3 = lme(biomass~diversity, random = ~1+diversity|plot, data = bdat, method = "ML")
anova(mod2, mod3)
mod0 = glm(biomass~1, data = bdat, method = "ML")
mod1 = lme(biomass~1, random = ~1|plot, data = bdat, method = "ML")
mod0 = glm(biomass~1, data = bdat, method = "ML")
mod0 = glm(biomass~1, data = bdat)
mod1 = lme(biomass~1, random = ~1|plot, data = bdat, method = "ML")
anova(mod0, mod1)
AIC(mod0, mod1)
mod3 = lme(biomass~diversity, random = ~1+diversity|plot, data = bdat, method = "ML")
anova(mod2, mod3)
# now we need to get a bit creative
mod4 = lme(biomass~diversity, random = ~1|plot/subplot, data = bdat, method = "ML")
anova(mod2, mod4)
AIC(mod3, mod4)
mod5 = lme(biomass~diversity, random = ~1+diversity|plot/subplot, data = bdat, method = "ML")
head(bdat)
# make data for example analysis 1
set.seed(231011)
n_plots = 30
n_subplots = 6
n_reps = 5
intercepts_plots = rnorm(n_plots, 20, 8)
slopes = rnorm(n_plots, 2, 2)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots*n_reps),
subplot = rep(1:n_subplots, each = n_reps),
diversity = runif(n_plots*n_subplots*n_reps, 1, 10),
biomass = NA)
# make data for example analysis 1
set.seed(231011)
n_plots = 10
n_subplots = 6
n_reps = 5
intercepts_plots = rnorm(n_plots, 20, 8)
slopes = rnorm(n_plots, 2, 2)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
error = 2
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots*n_reps),
subplot = rep(1:n_subplots, each = n_reps),
diversity = runif(n_plots*n_subplots*n_reps, 1, 10),
biomass = NA)
bdat$biomass=intercepts[cbind(bdat$plot, bdat$subplot)] + slopes[bdat$plot]*bdat$diversity + rnorm(nrow(bdat), 0, error)
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
# make data for example analysis 1
set.seed(231011)
n_plots = 10
n_subplots = 6
n_reps = 5
intercepts_plots = rnorm(n_plots, 20, 8)
slopes_plots = rnorm(n_plots, 2, 2)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
slopes = matrix(nrow = n_plots, ncol = n_subplots)
slopes = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
slopes[i,] = rnorm(n_subplots, slopes_plots[i], 2)
}
error = 2
# make data for example analysis 1
set.seed(231011)
n_plots = 10
n_subplots = 6
n_reps = 5
intercepts_plots = rnorm(n_plots, 20, 8)
slopes_plots = rnorm(n_plots, 2, 3)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
slopes = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
slopes[i,] = rnorm(n_subplots, slopes_plots[i], 2)
}
error = 2
# "TRUE" result is:
# resid error: 2
# plot/subplot slope variability: 2
# plot/subplot intercept variability: 5
# plot slope variability: 3
# plot intercept variability: 8
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots*n_reps),
subplot = rep(1:n_subplots, each = n_reps),
diversity = runif(n_plots*n_subplots*n_reps, 1, 10),
biomass = NA)
bdat$biomass=intercepts[cbind(bdat$plot, bdat$subplot)] + slopes[bdat$plot]*bdat$diversity + rnorm(nrow(bdat), 0, error)
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
# analyse
require(nlme)
mod0 = glm(biomass~1, data = bdat) # note - if we want to fit a model without random effects, we need to use "glm"
mod1 = lme(biomass~1, random = ~1|plot, data = bdat, method = "ML")
AIC(mod0, mod1) # more complex model is an improvement
mod2 = lme(biomass~diversity, random = ~1|plot, data = bdat, method = "ML")
anova(mod1, mod2) # significant improvement with more complex model
mod3 = lme(biomass~diversity, random = ~1+diversity|plot, data = bdat, method = "ML")
anova(mod2, mod3) # significant improvement with more complex model
# now we need to get a bit creative
mod4 = lme(biomass~diversity, random = ~1|plot/subplot, data = bdat, method = "ML")
anova(mod2, mod4) # significant improvement with more complex model
AIC(mod3, mod4) # mod3 performs better
mod5 = lme(biomass~diversity, random = ~1+diversity|plot/subplot, data = bdat, method = "ML")
anova(mod4, mod5) # significant improvement with more complex model
mod5_reml = update(mod5, method = "REML")
summary(mod5_reml)
VarCorr(mod)[,2] # how do these compare to our expectations?
VarCorr(mod5_reml)[,2] # how do these compare to our expectations?
VarCorr(mod5_reml)
# make data for example analysis 1
set.seed(231011)
n_plots = 10
n_subplots = 6
n_reps = 5
intercepts_plots = rnorm(n_plots, 20, 8)
slopes_plots = rnorm(n_plots, 2, 3)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
slopes = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
slopes[i,] = rnorm(n_subplots, slopes_plots[i], 2)
}
error = 2
# "TRUE" result is:
# resid error: 2
# plot/subplot slope variability: 2
# plot/subplot intercept variability: 5
# plot slope variability: 3
# plot intercept variability: 8
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots*n_reps),
subplot = rep(1:n_subplots, each = n_reps),
diversity = runif(n_plots*n_subplots*n_reps, 1, 10),
biomass = NA)
bdat$biomass=intercepts[cbind(bdat$plot, bdat$subplot)] + slopes[cbind(bdat$plot, bdat$subplot)]*bdat$diversity + rnorm(nrow(bdat), 0, error)
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
# analyse
require(nlme)
mod0 = glm(biomass~1, data = bdat) # note - if we want to fit a model without random effects, we need to use "glm"
mod1 = lme(biomass~1, random = ~1|plot, data = bdat, method = "ML")
AIC(mod0, mod1) # more complex model (mod1) is an improvement
mod2 = lme(biomass~diversity, random = ~1|plot, data = bdat, method = "ML")
anova(mod1, mod2) # significant improvement with more complex model
mod3 = lme(biomass~diversity, random = ~1+diversity|plot, data = bdat, method = "ML")
anova(mod2, mod3) # significant improvement with more complex model
# now we need to get a bit creative
mod4 = lme(biomass~diversity, random = ~1|plot/subplot, data = bdat, method = "ML")
anova(mod2, mod4) # significant improvement with more complex model
AIC(mod3, mod4) # mod3 performs better
mod5 = lme(biomass~diversity, random = ~1+diversity|plot/subplot, data = bdat, method = "ML")
anova(mod4, mod5) # significant improvement with more complex model
mod5_reml = update(mod5, method = "REML")
summary(mod5_reml) # what do p-values tell us?
VarCorr(mod5_reml) # how do these compare to our expectations?
bdat = read.csv("dataset_2.csv")
bdat = read.csv("dataset_2.csv")
n_plots = length(unique(bdat$plot))
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
# make data for example analysis 1
set.seed(231011)
n_plots = 10
n_subplots = 6
n_reps = 5
intercepts_plots = rnorm(n_plots, 100, 8)
slopes_plots = rnorm(n_plots, 2, 3)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
slopes = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
slopes[i,] = rnorm(n_subplots, slopes_plots[i], 2)
}
error = 2
# "TRUE" result is:
# plot intercept variability: 8
# plot slope variability: 3
# plot/subplot intercept variability: 5
# plot/subplot slope variability: 2
# resid error: 2
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots*n_reps),
subplot = rep(1:n_subplots, each = n_reps),
diversity = runif(n_plots*n_subplots*n_reps, 1, 10),
biomass = NA)
bdat$biomass=intercepts[cbind(bdat$plot, bdat$subplot)] + slopes[cbind(bdat$plot, bdat$subplot)]*bdat$diversity + rnorm(nrow(bdat), 0, error)
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
# analyse
require(nlme)
mod0 = glm(biomass~1, data = bdat) # note - if we want to fit a model without random effects, we need to use "glm"
mod1 = lme(biomass~1, random = ~1|plot, data = bdat, method = "ML")
AIC(mod0, mod1) # more complex model (mod1) is an improvement
mod2 = lme(biomass~diversity, random = ~1|plot, data = bdat, method = "ML")
anova(mod1, mod2) # significant improvement with more complex model
mod3 = lme(biomass~diversity, random = ~1+diversity|plot, data = bdat, method = "ML")
anova(mod2, mod3) # significant improvement with more complex model
# now we need to get a bit creative
mod4 = lme(biomass~diversity, random = ~1|plot/subplot, data = bdat, method = "ML")
anova(mod2, mod4) # significant improvement with more complex model
AIC(mod3, mod4) # mod3 performs better
mod5 = lme(biomass~diversity, random = ~1+diversity|plot/subplot, data = bdat, method = "ML")
anova(mod4, mod5) # significant improvement with more complex model
# mod5 "wins" - re-fit with REML and interpret
mod5_reml = update(mod5, method = "REML")
summary(mod5_reml) # what do p-values tell us?
VarCorr(mod5_reml) # how do these compare to our expectations?
par(mar=c(4,4,2,2))
coplot(biomass~diversity|plot, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
coplot(biomass~diversity|plot, data = bdat)
par(mar=c(4,4,2,2))
coplot(biomass~diversity|plot, data = bdat)
par(mar=c(4,4,2,2))
coplot(biomass~diversity|plot, data = bdat)
par(mar=c(4,4,2,2))
coplot(biomass~diversity|plot, data = bdat)
coplot(biomass~diversity|as.factor(plot), data = bdat)
coplot(biomass~diversity|as.factor(plot), data = bdat,
panel = function(x, y, ...) {points(x,y, pch = subplot)})
par(mar=c(4,4,2,2))
coplot(biomass~diversity|as.factor(plot), data = bdat,
panel = function(x, y, ...) {points(x,y, pch = bdat$subplot)})
par(mar=c(4,4,2,2))
coplot(biomass~diversity|as.factor(plot), data = bdat,
panel = function(x, y, ...) {points(x,y, pch = bdat$subplot)})
par(mar=c(4,4,2,2))
coplot(biomass~diversity|as.factor(plot), data = bdat,
panel = function(x, y, ...) {points(x,y, pch = bdat$subplot[bdat$plot==1])})
# make data for example analysis 1
set.seed(231011)
n_blocks = 10
intercepts = rnorm(n_blocks, 20, 8)
slopes = 2
error = 2
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_1.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes, col = i, lty=2)
} else {
abline(intercepts[i], slopes, col = i)
}
}
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1|block, data = bdat)
summary(mod)
fixef(mod)
ranef(mod)
VarCorr(mod)
# make data for example analysis 1
set.seed(231011)
n_blocks = 10
intercepts = rnorm(n_blocks, 14, 7)
slopes = 5
error = 5
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes, col = i, lty=2)
} else {
abline(intercepts[i], slopes, col = i)
}
}
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1|block, data = bdat)
summary(mod)
fixef(mod)
ranef(mod)
VarCorr(mod)
