# make data for example analysis 1
set.seed(231011)
n_blocks = 10
intercepts = rnorm(n_blocks, 20, 8)
slopes = rnorm(n_blocks, 2, 2)
error = 2
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes[bdat$block]*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes[i], col = i, lty=2)
} else {
abline(intercepts[i], slopes[i], col = i)
}
}
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1+diversity|block, data = bdat)
summary(mod)
fixef(mod)
ranef(mod)
VarCorr(mod)
slopes = 2
error = 2
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_1.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes[i], col = i, lty=2)
} else {
abline(intercepts[i], slopes[i], col = i)
}
}
# make data for example analysis 1
set.seed(231011)
n_blocks = 10
intercepts = rnorm(n_blocks, 20, 8)
slopes = 2
error = 2
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_1.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes, col = i, lty=2)
} else {
abline(intercepts[i], slopes, col = i)
}
}
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1+diversity|block, data = bdat)
summary(mod)
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1+diversity|block, data = bdat)
mod = lme(biomass~diversity, random = ~1|block, data = bdat)
summary(mod)
fixef(mod)
ranef(mod)
VarCorr(mod)
# make data for example analysis 1
set.seed(231011)
n_blocks = 10
intercepts = rnorm(n_blocks, 14, 7)
slopes = 5
error = 5
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes, col = i, lty=2)
} else {
abline(intercepts[i], slopes, col = i)
}
}
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1|block, data = bdat)
summary(mod)
fixef(mod)
ranef(mod)
VarCorr(mod)
# make data for example analysis 1
set.seed(231011)
n_blocks = 10
intercepts = rnorm(n_blocks, 20, 8)
slopes = rnorm(n_blocks, 2, 2)
error = 2
bdat = data.frame(plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks*3, 1, 10),
biomass = NA)
bdat$biomass=intercepts[bdat$block] + slopes[bdat$block]*bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat=bdat[bdat$block!=3 | bdat$plot==bdat$block,]
write.csv(bdat, "dataset_1.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = block, data = bdat)
for(i in 1:6) {
if(i==3) {
abline(intercepts[i], slopes[i], col = i, lty=2)
} else {
abline(intercepts[i], slopes[i], col = i)
}
}
# analyse
require(nlme)
mod = lme(biomass~diversity, random = ~1+diversity|block, data = bdat)
summary(mod)
fixef(mod)
ranef(mod)
VarCorr(mod)
# make data for example analysis 1
set.seed(231011)
n_plots = 10
n_subplots = 6
n_reps = 5
intercepts_plots = rnorm(n_plots, 100, 8)
slopes_plots = rnorm(n_plots, 2, 3)
intercepts = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
intercepts[i,] = rnorm(n_subplots, intercepts_plots[i], 5)
}
slopes = matrix(nrow = n_plots, ncol = n_subplots)
for(i in 1:n_plots) {
slopes[i,] = rnorm(n_subplots, slopes_plots[i], 2)
}
error = 2
# "TRUE" result is:
# plot intercept variability: 8
# plot slope variability: 3
# plot/subplot intercept variability: 5
# plot/subplot slope variability: 2
# resid error: 2
bdat = data.frame(plot = rep(1:n_plots, each = n_subplots*n_reps),
subplot = rep(1:n_subplots, each = n_reps),
diversity = runif(n_plots*n_subplots*n_reps, 1, 10),
biomass = NA)
bdat$biomass=intercepts[cbind(bdat$plot, bdat$subplot)] + slopes[cbind(bdat$plot, bdat$subplot)]*bdat$diversity + rnorm(nrow(bdat), 0, error)
write.csv(bdat, "dataset_2.csv", row.names = FALSE)
# plot
par(mar=c(4,4,2,2))
plot(biomass~diversity, col = rainbow(n_plots)[plot], pch = subplot, data = bdat)
# analyse
require(nlme)
mod0 = glm(biomass~1, data = bdat) # note - if we want to fit a model without random effects, we need to use "glm"
mod1 = lme(biomass~1, random = ~1|plot, data = bdat, method = "ML")
AIC(mod0, mod1) # more complex model (mod1) is an improvement
mod2 = lme(biomass~diversity, random = ~1|plot, data = bdat, method = "ML")
anova(mod1, mod2) # significant improvement with more complex model
mod3 = lme(biomass~diversity, random = ~1+diversity|plot, data = bdat, method = "ML")
anova(mod2, mod3) # significant improvement with more complex model
# now we need to get a bit creative
mod4 = lme(biomass~diversity, random = ~1|plot/subplot, data = bdat, method = "ML")
anova(mod2, mod4) # significant improvement with more complex model
AIC(mod3, mod4) # mod3 performs better
mod5 = lme(biomass~diversity, random = ~1+diversity|plot/subplot, data = bdat, method = "ML")
anova(mod4, mod5) # significant improvement with more complex model
# mod5 "wins" - re-fit with REML and interpret
mod5_reml = update(mod5, method = "REML")
summary(mod5_reml) # what do p-values tell us?
VarCorr(mod5_reml) # how do these compare to our expectations?
# make data for example analysis 1
set.seed(231011)
n_blocks <- 10
intercepts <- rnorm(n_blocks, 20, 8)
slopes <- rnorm(n_blocks, 2, 2)
error <- 2
bdat <- data.frame(
plot = 1:3,
block = rep(1:n_blocks, each = 3),
diversity = runif(n_blocks * 3, 1, 10),
biomass = NA
)
bdat$biomass <- intercepts[bdat$block] + slopes[bdat$block] * bdat$diversity + rnorm(nrow(bdat), 0, error)
bdat <- bdat[bdat$block != 3 | bdat$plot == bdat$block, ]
write.csv(bdat, "dataset_1.csv", row.names = FALSE)
# plot
par(mar = c(4, 4, 2, 2))
plot(biomass ~ diversity, col = block, data = bdat)
for (i in 1:10) {
if (i == 3) {
abline(intercepts[i], slopes[i], col = i, lty = 2)
} else {
abline(intercepts[i], slopes[i], col = i)
}
}
# analyse
require(nlme)
mod <- lme(biomass ~ diversity, random = ~ 1 + diversity | block, data = bdat)
summary(mod)
fixef(mod)
ranef(mod)
VarCorr(mod)
